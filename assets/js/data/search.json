[
  
  {
    "title": "Accessing My Desktop Remotely",
    "url": "/posts/Remote-PC-Access/",
    "categories": "",
    "tags": "automation, technology",
    "date": "2024-09-22 18:03:00 +0100",
    





    
    "snippet": "MotivationI recently wanted to explore how neural networks operate, and set upsome of the models myself.I found a great course and guidance from my peers to get started but was notcomfortable with ...",
    "content": "MotivationI recently wanted to explore how neural networks operate, and set upsome of the models myself.I found a great course and guidance from my peers to get started but was notcomfortable with how I could get the work done.My laptop could be used easily and be brought into the AI office space, but waslacking a dedicated GPU.My PC has everything it would need to run the models with ease, but is veryrooted in place.Thus I needed a way to access my PC through my laptop from a remote location,giving me the freedom to work from anywhere while utilising all the computingpower I currently have access to at this stage.Looking into setting this up securely is a larger can of worms than I expectedso I‚Äôm writing up the steps and findings for posterity.The SetupThe requirements for this project boiled down to:  Having access to my local network without exposing my PC to theinternet directly.  Only the SSH port should be available for connection, and it should onlyallow key-based authentication (no username/password). This would eliminateany brute-force attacks from being effective, and hopefully deter people fromtrying in the first place.To achieve all this the setup grew to be:  flowchart LR  E[Laptop] &lt;--&gt; A[Internet]  A &lt;-- Dynamic DNS --&gt; C[VPN on RpPI]  C &lt;-- key authentication --&gt; D[SSH to my PC]Pi SetupI had a build on my Pi already, but I didn‚Äôt configure it to anything useful.So I grabbed the SD card and flashed Raspberry Pi OS Lite, 64bit.It‚Äôs much easier to set up a hostname, initial WiFi and SSH config settingsthrough the Pi Imager, so I used that.Dynamic DNS  Dynamic DNS (DDNS) is a method of automatically updating a name server inthe Domain Name System (DNS), often in real time, with the active DDNSconfiguration of its configured hostnames, addresses or other information.‚Äì WikipediaI needed to be able to access my Raspberry Pi, which means I needed to have accessto my router.As with most home networks, the IP address for my router is managed by my ISP,and is not fixed to a specific one.Any router reboot, or network reconfiguration could change my home IP withoutnotice.This is where Dynamic DNS becomes useful.It assigns a name to a personal account of mine, and with the right configuration,it periodically looks up my IP, and links it with the assigned name.So I could use the name I‚Äôve chosen, and it would always link to my home network(so long as the DDNS service is up and running).There are many DDNS services, free and payed alike. I opted forDuckDNS.The configuration was straightforward and was compatible with a lot of linux devices.Once all was said and done, there was a one-liner bash script run by a cron job.It‚Äôs specific to the person, and is generated by their website once you log in.N.B It requires something that‚Äôs on all the time (or at least on for when you‚Äôretrying to use it while you‚Äôre away).Router ConfigSetting the Pi up with DDNS did not need any extra network configuration,because it is reaching out to the Internet and providing information to theDuckDNS servers.If I wanted a VPN to be accesible, however, I needed to also know the address ofmy Pi, not just my router.For that to be the case, I needed the MAC address of my RpPi.Running ip a on the command line gave me the MAC address on the Pi‚Äôs WiFiadapter under the link/ether section.Then logging into my router, and enabling ‚ÄúExpert Mode‚Äù üôÑ, I had to navigateto Settings -&gt; Local Network -&gt; StaticDHCPv4 - Local Network.There I added an IP of my choice, included the MAC address, and selected myRpPi hostname from the dropdown menu.(These instructions are on a per-router basis, so will likely be useless goingforward).PiVPNThe PiVPN setup was straightforward, with the only gotchas beingspecific settings for this usecase.Installation was just a curl command:curl -L https://install.pivpn.io | bashMost of the following screens had their default settings.After I reached this screen, I had to actually pay attention.At this stage the port used for wireguard was selected, default being 51820.Then there‚Äôs a choice of public DNS provider, which is arbitrary for the PI.The following page configures how the connection to the server, and they had to bechanged to ‚ÄúDNS Entry‚Äù:Then input the DDNS address was selected.In this case it should be \"domain\".duckdns.org.Continuing the installation and rebooting lead to a Raspberry Pi with PiVPNinstalled.WireGuardNow the VPN server was set up, but it didn‚Äôt allow just anyone to log in.Clients need to manually be added to the Pi.Technically, you can make just one client and pass the config around to alldevices, but it‚Äôs more secure to have an individual config per client.Setup was easy enough, so this shouldn‚Äôt be a problem, and at the current stageI only had one client anyway.I run pivpn add, entered the sudo password, and added a name for my laptop.Then I copied the generated .conf file across, and installed wireguard onmy laptop by running sudo apt-get install wireguard.Some permission wrangling was in order as well before addding the configuration:sudo sumkdir -p /etc/wireguardchown root:root /etc/wireguardchmod 700 /etc/wireguardmv \"myconfig\".conf /etc/wireguard/After that, the commands to enable and disable the VPN are simply:wg-quick up myconfig    # enable VPNwg-quick down myconfig  # disable VPNMore Router ConfigHaving wireguard set up wouldn‚Äôt help at this stage because my home routerwouldn‚Äôt actually allow any traffic through to reach the Pi.This is a good thing in general, but in this case I needed to set up theappropriate port-forwarding rules.So I logged-in to my router once again, went to Internet-&gt;IPv4 Port Mapping -&gt;Static Port Mapping, and port-forwarded the appropriate port using UDP and myPi‚Äôs (now static) IP address.SSH Key AuthenticationSetting up SSH was a bit of trial and error.I didn‚Äôt want my Pi to use password authentication, which means the systemneeded to be working on SSH Keys alone.I finally used ssh-keygen to generate the key pair and‚ÄúSeahorse‚Äù which is a linux key manager to handle how my laptop stored the key.I also learned that ssh-agent only stores the private key ephemerally which wasthe reason for a short-lived initial attempt.  The -t flag changes the type of key generated,and the -c flag gives a name to the key-pairThen I used ssh-copy-id to transfer my laptop‚Äôs public key to the Pi.For the second hop to my PC, I had to repeat the process from my Pi to my PC,and also vice-versa.This was likely not required, but it helped troubleshooting setting up the keysto my Windows PC.Investigating what ssh-copy-id automates, I found what it appends in a filein linux called authorized_keys.Turns out that in Windows, based on your account type, there‚Äôs a whole separatefile used at C:\\ProgramData\\ssh\\administrators_authorized_keys.A slight snag was that my PC needed a fixed IP as well if I didn‚Äôt want toinclude a step of logging into my router and look up its IP everytime.Configuring passwordless SSHThe file to edit was /etc/ssh/sshd_config.There is a line about enabling public key authentication:PubkeyAuthentication yes.There is also a line about disabling password authentication:PasswordAuthentication no.Both needed to be explicitely set, and likely uncommented if needed to actuallyget it to work.Debugging NotesThere are debug messages that both the SSH server and SSH client can show.For the server, the sshd service needs to first be stopped(Usually sudo systemctl stop sshd.service).Then it needs to be run manually with the debug flags.This may not work immediately, because environment variables and temp filesare created during log-on that get deleted with the service being stopped.Manually touching them again fixes that, if it is an issue.Debugged service: /usr/sbin/sshd -dddFor the client, the debug command just includes the flag -vvvConfig files and proxy jumpTwo config files helped with simplifying the process for reaching my PC.This means the SSH command becomes a short one-liner instead of having toremember all of the parameters.Stored in each case‚Äôs ~/.ssh/config.The Pi‚Äôs ConfigHost #custom-name  HostName #IP Address  User #usernameThe Laptop‚Äôs ConfigHost #custom-name-pi  HostName #Pi IP Address  User # Pi usernameHost #custom-name-PC  HostName #PC IP Address  User #PC username  ProxyJump #custom-name-piAdding the ProxyJump line meant that running ssh custom-name-PC now firstran ssh custom-name-pi and then used the custom-name-PC settings to log intomy PC.VS Code specific settingsVS Code originally seemed easy to set up having everything else up and running,but it still presented some awkwardness.After installing the remote SSH plugin, I could set up a connection to myPi, but would fail to establish one with my windows PC.It turned out that there are specific settings to be checked for a connectionbetween a VS Code linux client and a windows SSH server.I‚Äôve included them all below, windows-hostname should be changed to the namein the SSH config file.{  \"remote.SSH.remotePlatform\": {    \"windows-hostname\": \"windows\"  },  \"terminal.integrated.defaultProfile.windows\": \"PowerShell\",  \"remote.SSH.useLocalServer\": false,  \"workbench.startupEditor\": \"none\"}And that‚Äôs it!With all of this I could access my PC from anywhere assuming the PC and the Piwere up and running, and my home had internet connection.A learning experience, with possibly a longer write-up than time taken to setup.Potential Extensionsa) There are multiple ways to establish the SSH connection through other texteditors besides VS Code, which could be good for working in different environments.b) Having a fixed IP for my PC is not ideal.Setting up an internal DNS server for my home network would mean I could reachmy PC through a hostname, even if its IP changed. The default router could havethe option to do this, or it‚Äôs another job for the Pi.ResourcesI collated this information from:  This kalos video @ 8:33  WireGuard  PiVPN docs  A couple of StackOverflow posts‚Ä¶"
  },
  
  {
    "title": "Getting Things Done",
    "url": "/posts/Getting-Things-Done/",
    "categories": "",
    "tags": "organisation, soft skills",
    "date": "2024-05-25 22:04:11 +0100",
    





    
    "snippet": "or at least writing them down.PreambleOver the last month I‚Äôve invested my time in improving various often-neglectedskills.I was considering two different avenues:  How my relationships impact my d...",
    "content": "or at least writing them down.PreambleOver the last month I‚Äôve invested my time in improving various often-neglectedskills.I was considering two different avenues:  How my relationships impact my day-to-day effectiveness.  Balancing tasks has become more difficult with increased responsibility.The next couple of posts are a summary of interesting resources I‚Äôve adaptedto help cope with the growing complexities of adulthood.Starting off with an organisation method: Getting Things Done.It‚Äôs well known and simple to understand.I‚Äôve adapted it for my needs and it has served me well over the last couple ofweeks. The jury‚Äôs still out on making life easier at this stage, but it‚Äôs lookingpromising for now.The MethodGetting Things Done (GTD) claimstp have 5 steps, but really boils down to 4.   graph TB    A[1. Capture]---B[4. Reflect]    A---C[2. Clarify]    B---D[3. Organise]    C---DCaptureThe essence of Capturing focuses on clearing up your mind from all the tasksthat require balancing.This works if everything is written down, and if this is done frequently.Everything includes almost all random, tiny, suprising tasks that need handlingon a day-to-day basis.The philosophy asks for a notebook carried at all times, to jot down the ideaon the spot.It insists on pen/paper instead of any digital notes if possible.ClarifyThe Clarify step is small but important.It sifts between tasks that can be done under a known time limit Vs. tasks thathave vague completion times for one reason or another.It asks the questions:            1) ‚ÄúIs this task actionable?‚Äù      2) ‚ÄúWhat‚Äôs the next action?‚Äù      It splits the responses to the questions into further subcategories.  flowchart TD   id1{Actionable?}--&gt;B[No]   id1{Actionable?}--&gt;A[Yes]   B--&gt;C[Incubate]   B--&gt;D[Reference]   B--&gt;E[Trash]   A--&gt;F[Defer]   A--&gt;G[Delegate]   A--&gt;H[Do it]I‚Äôve simplified the diagram and merged some categories to summarise the informationI found important.Let‚Äôs explain the terms.First the ‚ÄúNo‚Äù side.      Incubate: A task that would be nice to be completed but you‚Äôremissing information that you are waiting on, or are dependent on other peopleto continue. Can be postponed for a long time, and even missed.        Reference: This information won‚Äôt help complete a task, it‚Äôs just usefulto return to in case you might need it later.        Trash: Information you‚Äôve decided you don‚Äôt need.You‚Äôve captured it, crossed it out, safely disposed of it.  Now for the ‚ÄúYes‚Äù side.  If it can be accomplished in less than 2 minutes, stop writing it down and do it on the spot.      Delegate: A task that needs to be done but someone else is better suitedto do it. Delegate it, make a new task to follow up on it.        Defer: A task that needs to be completed but you‚Äôremissing information that you are waiting on, or are dependent on other peopleto continue.        Do it: A task that needs to be completed by you, in a timely manner.  OrganiseIn the Organise step the idea is to sort through all the actionable tasks andput them in lists, or tag them to processes.This gives an overview of what needs to be done at a project level overvarious projects, as necessary.Part of organisation includes updating the calendar with any appointmentsthat are required to complete the actions.A reminder section then captures all delegated tasks that require following up.ReflectReflection emphasises that GTD works only if it‚Äôs done repeatedly and systematically.Regularly reviewing the lists ensures tasks get completed and information isnot lost over time.The philosophy asks that you:  Review of the calendar multiple times a day  Check Actionable lists at least once a day  Do a weekly review of the whole processAdopting the systemAfter a couple of weeks testing the system I‚Äôve modified it to suit my needsbetter.It‚Äôs useful to have the abridged version written up, but I am implementing acompacted version of GTD which I‚Äôve found to speed up the process.This helps me as it‚Äôs easy to get lost in following a process rather thangaining value from it.So if the process is as short as possible, it will not distract from its maingoal (to get things done).The essentialsThis compact version expects GTD knowleadge to execute as it bundles upinformation.It boils down the process to what I‚Äôve determined to be the two most usefulDiagram Blocks: Incubate, and Actionable.Capturing happens under these two columns over the day/week.A date helps locate which GTD is currently in focus, expecting one to last aweek.A new GTD can be made if tasks changed quickly or the old one needs refactoring.Anything under Incubate includes all the tasks that would be niceto complete, but there‚Äôs no time frame, and it‚Äôs okay to prolong/extend andeven miss.It also includes all references.I don‚Äôt bother noting down trash, and anything crossed out I count as trashvisually, so it doesn‚Äôt need to be moved/rewritten, even if it‚Äôs in theActionable column.Anything under Actionable is a task that needs Defering, Delegationor to be completed.Attempts at writing tasks down should try and maintain the same topic as muchas possible.After all, when focusing on a project, it‚Äôs easy to think of all the tasks.It‚Äôs much harder to jump around various tasks and write them all down.This can fail as things come up, and as the section grows over the day, butit‚Äôs good enough.Clarify and Organise happen in one step under these two columns.To assist organisation, space is left for tags/numbers next to the columns.I usually leave space underneath the page for these columns to expand on whatthe tags mean if necessary.Numbers can be particularly useful to denote priority as well, workingdouble-duty.An example"
  },
  
  {
    "title": "A New Framework (Laptop)",
    "url": "/posts/Impressons-from-my-Framework-Laptop/",
    "categories": "",
    "tags": "technology, electronics, programming",
    "date": "2024-05-25 22:04:11 +0100",
    





    
    "snippet": "The drive for a changeGoing into university, I got a new laptop to assist me with my studies.This was 7+ years ago now, and even the mid-life hardware updates I had performed to give it a new life ...",
    "content": "The drive for a changeGoing into university, I got a new laptop to assist me with my studies.This was 7+ years ago now, and even the mid-life hardware updates I had performed to give it a new life and make it feel fresh again were not cutting it.So after freshly installing Windows on it did not improve its start time, I was once again looking for a new machine after so long.My requirements had changed this time. I no longer needed a laptop powerful enough to handle games.Since I‚Äôve built my desktop, and since streaming games became so easy, I now have all the options I need if I ever want to game away from my desk.I‚Äôve also spent a lot more time in software development and discovered the difficulties in programming on a Windows machine.Therefore, it was time to switch to Linux as a daily driver.So now to pick the specs. I‚Äôd still want a powerful laptop, mostly for ease of development.Realistically, another use would be watching videos, so the display had to be nice as well.Discovering FrameworkI learned about Framework and was intrigued by both the modularity and repairability.I had been following laptop trends and was unhappy about the newer anti-consumer practices from Apple, (and likely soon-to-follow laptop brands) with soldered RAM into their newest flagships‚Äô motherboards. Any repair at this point would cost the price of an entire new laptop, and it would be thedefinitely default response provided by Apple. It‚Äôs not as profitable, after all, to spend money troubleshooting problems and fixing them.In comparison, Framework felt like a breath of fresh air. New parts to repair the old ones are sold directly by the company for the home user to replace as needed.Laptops are built with that in mind, making repairs easy. I knew there would be compromises, but I decided I was going to evaluate them accordingly.Framework is quite a small company and is still trying to get its feet off the ground.So it only had one device available when I was considering a purchase ‚Äì the Framework 13.It looked like a good laptop with a couple of generations, decent specs, and even motherboard upgrades.As in, you could buy a new motherboard with an upgraded CPU and only replace that, keeping all other parts, and your data!That still seems amazing to me.However, this laptop is pricey. Niche technology from an up-and-coming company was not going to be competitive in price, and I accepted that.Deciding on the laptopAt the time that I was searching, the Framework 13 was at its matured stage, but the Framework 16 was in its final prototype stages.The cost was very similar as part of pre-ordering and for the latest generation AMD CPU, a 16-inch screen, more hardware extensions, and a possible dedicated GPU upgrade ‚Äì the decision became clear.Not without its downsides, however, as I placed a pre-order for the FW16 in November, and finally got a shipping notification in May.So the tail end of 2023 was spent with the old laptop, following up on news, and reviews for the batches of laptops getting shipped to reviewers and other pre-order posts on the Framework forums and Reddit.The waiting time definitely gave me cold feet, and honest reviews showcased the difficulties that come with the mass production of new products.People receiving broken, or misaligned components, design deficiencies coming to light, but also, the earnestness of support to provide help to everyone unlucky enough to receive faulty units.I am glad I stuck with it in the end because, despite its faults, I am quite enjoying my new laptop.What I like about itModular portsWith a few restrictions, all the ports to the laptop are based on USB-C, and the laptop comes with slots for modules.These modules are converters between ports, so that one can decide what capabilities their laptop can exhibit.Examples of ports include:  USB-C  USB-A  HDMI  Display Port  Audio Jack  External storage expansion drive  SD-Card  Data for designers to create their own!The laptop comes in two flavours: prebuilt, and DIY. The DIY edition is slightly cheaper, but the user is responsible for assembling all their components, installing the OS and confirming everything works.My favourite part of setting up the DIY edition was reaching out for one of my USB cables and deciding it wouldn‚Äôt reach all the way.Instead of rearranging the cabling, I switched the laptop upside-down, unlocked the modules, flipped the USB-A port with the USB-C port, and suddenly the cable could reach! Keyboard customisability I usually like numpads on my laptops.Over the last couple of years though, I‚Äôve started using a laptop without one, but usually attached with an external keyboard while docked, that does have a numpad.So the ability to switch between a centred keyboard/trackpad pair and a left-aligned version with a numpad is wonderful. I‚Äôm currently enjoying the numpad configuration, but I‚Äôm glad I can switch on the fly. Documentation &amp; Community Setting up the OS was very smooth, a lot of documentation was available both on the Framework website and the forums.I went with Pop-OS in the end. I don‚Äôt have the customisability I would like at this point, but because the hardware is so new, the drivers and kinks have not been ironed out yet.So even though I would like to set up Arch eventually, I didn‚Äôt want to spend days setting things up only to still have bugs/annoyances every day.Pop-OS is close enough to Ubuntu (which is natively supported) that I successfully got away with installing it hassle-free while still being able to customise it nicely.What I don‚Äôt likeSpeakers, Mic, CameraI had already known from the reviews, but the speakers are very weak and muted.If the laptop is not on a hard surface, half of the sound disappears.Headphones are a must if I ever want to watch a video, and I‚Äôve got no solution for watching with multiple people.The camera is a typical laptop camera, not terrible, but very bad with lighting.The microphone is terrible.The sound played back on the speakers probably harms the mic even more, but it sounds choppy, tinny, and crackly.I am not expecting any video calls on the laptop, and if I want to do that, my docking station has a much nicer camera/mic combo.For the price of the laptop, given that these are well-established components that aren‚Äôt modular, I was expecting much more emphasis on quality.It is one of the most disappointing parts of the laptop. Precision/Finish of Aesthetics This is their first iteration of the FW16. So it is understandable that there may be some errors.One of the more noticeable ones that also affects my build is the precision of the finish for the non-electronic components.The way the trackpad can be left-aligned is by removing two bezel pieces and rearranging them to both be on the right.These pieces were made precise for their original locations only.I can say this because in their alternate configuration, one sticks out on one side above the metalwork, and the other dips into it on the other side.Hopefully, later iterations of the laptop will fix this, but this is the cost I pay for getting in early.BatteryThe battery life seems weak. 4-5 hours on power saver mode. This is arguably happening for a lot of reasons.  I set the battery max to 80% in the bios to extend my battery‚Äôs life.  Pop-OS has its own battery-saving tools, different from AMD‚Äôs recommendations.  I‚Äôm on balanced mode instead of battery saver a lot of the time.  I‚Äôve heard of other people reducing their power usage by much more, but haven‚Äôt found a way to set that up.Even so, a larger battery would be nice. My last laptop‚Äôs battery died within a couple of years, so I‚Äôve been wired ever since. It feels like the freedom of wireless computing isn‚Äôt going to last long with this device.At least I know I can get a new battery easily.I was also wondering about the impact of the OS on the battery life, and if Windows would have been better than Linux since Linux is notoriously worse in this regard.I am happy with the battery I can get from it now, as having updated to Windows 11 at work and seeing my battery life halve from 6 to 3 hours, confirms that I‚Äôve made the right call even if it‚Äôs not the best one.OverallGetting this laptop was a great learning experience, even with all its drawbacks. I still support the idea enough that I‚Äôm happy with my purchase and hope that the company develops enough that future purchases will improve on their current lineup."
  },
  
  {
    "title": "Functional Programming (using Ocaml)",
    "url": "/posts/Functional-Progamming/",
    "categories": "",
    "tags": "programming",
    "date": "2024-03-31 19:22:12 +0100",
    





    
    "snippet": "Desire to CodeI wouldn‚Äôt claim to have taken a formal programming course and yet I feel confident in being able to come up with programmatic solutions to problems when necessary.This has always fel...",
    "content": "Desire to CodeI wouldn‚Äôt claim to have taken a formal programming course and yet I feel confident in being able to come up with programmatic solutions to problems when necessary.This has always felt hacky, and without much direction, I haven‚Äôt felt that I could escape this feeling.I‚Äôve considered two ways to address this desire to improve my programming skills.  Learn and practice algorithms ‚Äì Unknowns remain here.  Branch into a different way of thinking with programming ‚Äì Functional programming instead of OOP.To learn and practise algorithms I need to pick a language.I‚Äôm familiar with Python and C, although neither seems like a good choice.Python is syntactically easy but I‚Äôve never considered it useful beyond scripting.The worry with C is that I‚Äôll be fighting the syntax just as much as the algorithm implementation.Rust carries the same concerns as C, but at least I might get better help with errors.The second task is finding the list of algorithms to implement.There are plenty of resources, I just need to pick one.Pairing this with Advent of Code problems will surely help keep everything refreshed in my mind.Functional ProgrammingAlthough I‚Äôve not had formal OOP training, it‚Äôs still the most utilised way to code (at least on the surface of the internet).So whatever I might have learned through the years would have been through an OOP lens.As a change of pace, I wanted to explore functional programming to see what I could learn from the experience.There are great resources for that online for free as well.  OCaml from the very beginning  OCaml Programming: Correct + Efficient + BeautifulPeculiar titles aside, working through the first book and exercises has been interesting, as I can see the complexity that comes from adopting a recursive thinking style.Once I‚Äôve finished the first book I will look at the second one, which is much more interactive.It will either be as useful or it will supplement knowledge, so it‚Äôs more likely that I will skim through it.Halfway through the first book, I began to keep track of the exercises and questions, and they now live on a GitHub repo of mine for posterity.I did look back on the first 5 chapters, and most of the interesting exercises ended up in the utils.ml file, so I haven‚Äôt bothered repeating them."
  },
  
  {
    "title": "Learning about Jekyll",
    "url": "/posts/Learning-about-jekyll/",
    "categories": "",
    "tags": "webpages",
    "date": "2023-10-27 21:37:12 +0100",
    





    
    "snippet": "Beginning the projectI‚Äôve understood how websites work on the surface level since I was a teenager.At various times, I‚Äôve started HTML documents and got them to display on a browser ‚Äî simple text a...",
    "content": "Beginning the projectI‚Äôve understood how websites work on the surface level since I was a teenager.At various times, I‚Äôve started HTML documents and got them to display on a browser ‚Äî simple text and images.But it still annoyed me that I couldn‚Äôt see how you‚Äôd jump from that to a shop page with reactive windows and custom animations.So after thinking about this from time to time, I finally decided to spend enough time learning how to build a site.The goal was/is a personal repository of past projects and some general information about myself.Starting SimpleAt first, I got interested in CSS.I was inspired by the work of Hyperplexed and tried to recreate some of their suggestions myself.My purpose was to get experience, and to achieve that I had to complete a small CSS task as presented, then try to modify it or add a personal element. More detail on how that went in the post about Playing with CSS.Discovering JekyllI talked to friends and took inspiration from other sites until I stumbled upon 11nty as a simple static site generator.It looked easy to learn, and it boasted performance.So I navigated to GitHub and started looking into hosting one of their GitHub pages.There I discovered that GitHub integrates well with Jekyll, and I would have to adjust many of their instructions to retrofit 11nty where Jekyll lived.So, since I haven‚Äôt spent any time in either static site generator, I ended up going with Jekyll.I don‚Äôt have the experience to be able to compare the two, although if I ever take up a new project, I might try 11nty so that I can see if I have an easier time getting started.Experimenting with ThemesPart of what attracted me to Jekyll is the available themes.I had spent time in the past making decisions on how I wanted my site to look.This took a lot of time I was willing to reinvest to port into Jekyll.However, GitHub showed that there are existing themes out there, and it was surprisingly easy to find a theme that was close enough to what I wanted to achieve.I ended up with the Chirpy theme and spent some time trying to migrate my existing first draft from the default theme to Chirpy.This led me to discover that Chirpy is using a newer version of Jekyll than GitHub-pages, and therefore the GitHub workflow that exists would not build properly.Although this was discouraging, I tried multiple ways of integrating Chirpy and automating the building and deployment of the site.I ended up with an approach where I would build the assets locally, and have a script to upload them to a separate branch, where the site lived.Even so, the implementation of the Chirpy theme wasn‚Äôt all there, and I was having configuration issues.So I bit the bullet, renamed and archived the repository, and started from scratch using the Chirpy template repository.It was a breath of fresh air.Customisation# Hierarchy of organisation for the site generatorJekyll # using Chirpy‚îú‚îÄ‚îÄ Liquid # Parser to configure Jekyll and the Chirpy theme‚îÇ¬†¬† ‚îú‚îÄ‚îÄ Rouge # CSS Styles configuration?‚îÇ¬†¬† ‚îî‚îÄ‚îÄ Ruby # Builds the HTML/SCSS/Js assets‚îî‚îÄ‚îÄ kramdown # Converts MD documents to HTMLHaving set up the theme, I immediately realised that some of the changes I wanted to perform were non-modifiable unless the theme itself was edited.After I made all the modifications I wanted, I built the site locally instead of deploying it through GitHub.Then I uploaded it to its own branch.Now adding new posts doesn‚Äôt rely on anything besides markdown, so this procedure can be automated again.I did need to capture the changes, as updating the Gem theme file from Ruby would wipe them all.Other than that, the only other things I needed to tweak were the _config.yml, contact.yml, and  share.yml files, the names of the tabs, and the data in the assets folder."
  },
  
  {
    "title": "Playing with CSS",
    "url": "/posts/Playing-with-CSS/",
    "categories": "",
    "tags": "webpages",
    "date": "2023-07-12 23:00:00 +0100",
    





    
    "snippet": "MotivationThe first instruction I was given on how to build a website by my Computer Science teacher when I was young, was to open a Word (2003) document.I was made to write basic HTML with &lt;hea...",
    "content": "MotivationThe first instruction I was given on how to build a website by my Computer Science teacher when I was young, was to open a Word (2003) document.I was made to write basic HTML with &lt;head&gt; and &lt;body&gt; information in said document, and save it as a .html file.As you can imagine, I hated the whole idea.It looked jarring and it felt like a ton of work to stylise any given element on the page.I couldn‚Äôt fathom that this was how websites were built.Thankfully they aren‚Äôt, but it did manage to dissuade me from trying to learn again for a long while.Eventually, I did want to learn how interesting effects were made, and after a quick internet search, I started looking into CSS.I wanted to stay away from javascript for two reasons: To see how far I could get with CSS alone, and to rest assured that I wouldn‚Äôt have to worry about loading scripts and the overhead they might add to the page.Approaching CSSThe advice I followed in choosing projects was ‚ÄúFind an element you like, and try to recreate it‚Äù.Having no real guidelines on methodology for CSS, I decided to try and replicate elements with known implementations in code.pen.In this way, I could work towards an end-goal, and get hints if I needed them.Choosing a variety of projects would expose me to different approaches to CSS as well.So to push my learning, I had also decided to make a meaningful modification to a project, once I‚Äôve implemented it in its entirety.This would help me confirm that I‚Äôve consolidated the knowledge I‚Äôve learned during the project.ProjectsCard Edge HighlightA stylised card class that has a subtle hover effect on its side.Hovering over multiple cardsCurtain rise effectAn image splash screen with site navigation hidden behind a curtain.Curtain Rise TransitionCloud following the mouseAn effect on the cursor loading with the website and following any movement.Rotating, faded, and following the mouseTwitch cardA shimmer effect that was found on Twitch, for phones.Clunky text transition animation and control over the background dotsRotating ClockA silly clock 4320 times faster than a seconds clock.Multiplying the animation by that number would make it a 12h clock.A clock completing one rotation every 10 seconds"
  },
  
  {
    "title": "Simple CTF games",
    "url": "/posts/Simple-CTF-games/",
    "categories": "",
    "tags": "cybersec",
    "date": "2023-06-10 21:00:11 +0100",
    





    
    "snippet": "Adventures in CTF activitiesOnce in a while, I want a riddle or a puzzle to solve.Capture-the-flag challenges are always able to scratch this itch.So I‚Äôll spend an afternoon going through an intere...",
    "content": "Adventures in CTF activitiesOnce in a while, I want a riddle or a puzzle to solve.Capture-the-flag challenges are always able to scratch this itch.So I‚Äôll spend an afternoon going through an interesting challenge page that I found.Here are some examples:pwn.collegeAn interactive education platform for Arizona State University to complement its Cybersecurity and Computer Systems Security courses.Open to everyone, and accompanied by lectures, Q&amp;As, and a discord server.  This is an at-your-own-pace challenge set, while CTFs are usually time-restricted.OverTheWireCTF challenges over an SSH connection for the most part.Categorised from simplest to hardest on their site from the top down.Each flag is the password to use for the next SSH challenge.They are generated according to your user, so finding flags from other people is not going to help you advance.Great sources for infoThe data I have been gathering for these challenges came from:  zaratec.io  ctftime"
  },
  
  {
    "title": "A button for smart lights",
    "url": "/posts/A-button-for-smartlights/",
    "categories": "",
    "tags": "electronics",
    "date": "2022-11-14 19:14:54 +0000",
    





    
    "snippet": "You can do two things when buying a knock-off product:  Understand that you might be getting something inferior and accept it.You did willingly spend less money, after all. If you don‚Äôt want to do ...",
    "content": "You can do two things when buying a knock-off product:  Understand that you might be getting something inferior and accept it.You did willingly spend less money, after all. If you don‚Äôt want to do that though‚Ä¶  You can turn it into a project ‚Äî to create a (frankly overcomplicated) mess to cover up the inferiorities of the knock-off item you have purchased.Will the second approach cost more money than the original project?Almost certainly.Will it be a fun teaching experience?It was in this case.So I can at least live with the illusion that I‚Äôve made good decisions for one more day.Smart lights - The ProblemThe smart lights I currently own are not the Philips ones that are more commonly expected when one talks about smart lights.Now there are many off-brand smart lights, and I didn‚Äôt spend time comparing differences.I bought what was at a reasonable price at the time, especially with the chip shortage crisis that meant that Philips lights were 2-3x their usual price.I said to myself I‚Äôd upgrade once the ones I got burned out.The problem was that these lights did not handle being disconnected from the network gracefully.If they couldn‚Äôt find a connection, they would go into their default reconnection mode.That would have been fine if that mode wasn‚Äôt to flash the brightest white light once a second.The upshot of this was that the physical light switch became practically useless, and I would have to control my lights exclusively through my phone.This is because the physical light switch cuts the wifi connection from the bulbs and they go into reconnection mode immediately as they come back up instead of looking for the network first.The SolutionThe app to control the lights has a turn-off function.Invoking that would be good enough.I just had to figure out a way to translate the function call from the app, into a physical switch on my wall.It seemed simple enough at the time, and in retrospect it is, just the approach could be more elegant.But this was supposed to be a quick project, so the first (bodgy) solution is the final one, to match the quality of the original product.The Parts  IFTTT - Handles applet requests using WebHooks.  SmartLife API - The app used by the lights manufacturer.  ESP8266 NodeMCU - The (last) microcontroller used for the button control.The PrototypesOf all the items I needed, the only thing I didn‚Äôt have in hand was a Wi-Fi module.I already had an Arduino, so I thought I could get a standalone Wi-Fi module for the ESP8266, and that would have been enough to help me implement everything.Having gotten the module, and wiring it up to the Arduino, I realised that I could not get it to make a POST request with an established library.There was an Arduino library that I used to control the Webhooks, but there was nothing that could send the request to the ESP82266 module.Instead, any commands to the module would have to be converted to AT commands.Another thing that came to light was that the combination of the Arduino and the breadboard with the module would make for a clunky and large button interface.What could use my Webhooks code, however, was the ESP8366 NodeMCU which is an MCU with the module installed on it and in a much smaller package as well.The good news was that I could redevelop the code at this point in advance of the MCU appearing after I bought it.Since all the prototyping was almost complete I moved on to veroboard, soldered everything in place to its small form factor and awaited for the NodeMCU to arrive.Version 2 of the system involved unpacking the MCU, plugging it in, and programming it with the code.A brief code snippet with the logic is summarised below, while the whole program can be found on Git Hub.  //Initialise and connect to Wifi  button.setDebounceTime(50);  Serial.begin(115200);  pinMode(LED_BUILTIN, OUTPUT);  digitalWrite(LED_BUILTIN, LOW);  WiFi.mode(WIFI_STA);  WiFi.disconnect();  delay(1000);  ...  void loop{  button.loop();  if(button.isPressed()){    //Update the button state    //Trigger off or on webhook based on the state    }  }Product ManagementThe hackiest of equipment can look professional if the box is well-designed.I gather more evidence to confirm this claim, the more I investigate electronics by taking them apart.So naturally, to finalise this project I needed a nice box.This was a fun couple of hours in Solidworks, then exporting to STL files and 3D-printing using Ultimaker Cura.First I made the bottom case with slots for the USB cable and holders for the header pins.I managed to make them tight enough that the Veroboard was essentially held in place by the groves and didn‚Äôt need any other fixtures.I didn‚Äôt quite get the four corners right where the bottom and top case parts would clip onto each other.I had to adjust and print a couple of versions until I was happy with it.The bottom part of the caseThe top part was fairly straightforward and only required two prints to get right.The hole for the button was just too tight by 1mm, so I had to increase the radius to make it less snug.Top part of the caseOutcomeOverall I‚Äôm happy with the final box after adding some extra decoration and a command strip to hold it in place.Now so long as the wall plug is on, I can physically press a button for my lights again.I still end up using the app more, but once in a while, it‚Äôs just much faster to hit a switch."
  },
  
  {
    "title": "A sign made from LEDs",
    "url": "/posts/A-static-LED-board/",
    "categories": "",
    "tags": "electronics",
    "date": "2022-11-11 19:14:54 +0000",
    





    
    "snippet": "An introvert‚Äôs suggestionOver lunch, we noticed that people started to migrate to different tables randomly without much explanation.Once confronted they said that they didn‚Äôt want to be social and...",
    "content": "An introvert‚Äôs suggestionOver lunch, we noticed that people started to migrate to different tables randomly without much explanation.Once confronted they said that they didn‚Äôt want to be social and didn‚Äôt want to explain to people that they were not in a social mood.Even the act of explaining was too uncomfortable some days.So they‚Äôd just walk away, but didn‚Äôt necessarily want to be away, just left alone that day.I got into watching Great Scott at the time and thought that his intro was a fun thing to try;I just didn‚Äôt have anything specific to make into a sign.So I thought, what about a do not disturb sign?You could turn it on at lunch to denote that you didn‚Äôt want conversation but still wanted company and people talking to each other around you.I also wanted more control than the Great Scott sign.So I thought, if the NOT lights are a different circuit from the DO and DISTURB words, you could control them independently.Then you could have a DO DISTURB, and a DO NOT DISTURB all at once!So I started with a Veroboard, and bought a packet of 50 LEDs for red and green and arranged them to my design.Arranging the LEDsDesigning the circuitAfter some very quick calculations, I decided the easiest way to power the LEDs was with 2 of them in series using a 5V power supply.So I started trying to add some jumper wires on the Veroboard to wire up the lights and quickly realised that this would not expand well.If I kept iteratively wiring up the circuit, then if there was a point where I was stuck, it would be annoyingly difficult to refactor it.At this point. I stopped designing on the board itself and tried looking for simulation software.I wouldn‚Äôt expect much but I did get lucky.VeeCAD does exactly what I wanted for a quick iterative prototype that I could break and rearrange as much as I wanted.It does showcase its age, but it is simple enough which I appreciate.It didn‚Äôt evolve to be something more complicated than it needed to be, and it had the amazing feature of mirroring the design before printing.That was great, as it was a challenge to try and design everything mirrored, and now that wasn‚Äôt necessary.Care was still needed, but the mirror button was an excellent proof-checker.First attempt at wiring up the signHalfway through the first row, I realised that trying to wire up all the LEDs in pairs would be too cramped.It was at this stage that I switched to 9 Volts for power and 3 LEDs in a row.This change in combination with some clever arrangement and a slightly bigger board, meant I could just squeeze everything in for the final design.Two evenings of work later (for some LEDs!) and I got this design ready to implement.The completed design, expanded a bitCreating it physicallyOnce I was happy with the design, I tried to print it to scale.Doing this in LibreOffice is not a thing I‚Äôd recommend.It does have scales in millimetres, and the printer tried its best, but it still took a couple of prints.After that, I started wiring.Here‚Äôs a picture partway through the design.Everything was powered by USB-C at the time, but eventually, I switched to a barrel-jack supply.It was certainly simpler than trying to establish the handshake for 9V.Completed the wiring of resistors and links. Only (!) the LEDs were left.Completed design - BacksidePowering it upI was testing the circuit at various points in time via an external power supply and crocodile clips.After I confirmed that all the lights came on as expected and stabilised in all four configurations, I started thinking about switches.The system needed to work in two of the four possible modes (Green ON Red ON, and Green ON Red OFF).If I had two separate power supplies I could have established a three-position switch, but that would not be cost-effective so I had to end up with two switches in the end.Here are pictures of the states the sign can be in now.There is a future where I 3D-print a case for the sign, but as is I like being able to see both sides.My only gripe is that the LEDs I bought in bulk clearly came from different batches even though I hoped they‚Äôd be identical.But what can you do, the imperfections are what make it unique."
  }
  
]

